const addBtn=document.getElementsByClassName("plus-duration"),minBtn=document.getElementsByClassName("minus-duration"),inputDurations=document.getElementsByName("input-duration"),payOrder=document.getElementsByClassName("btn-pay-order")[0];async function updateSubPrice(t,e){const n=document.getElementById(`duration-${t}`).textContent,o=`${BASE_URL_API}/cart/duration/${t}/${n}`,a=document.getElementById(`waifu-price-${t}`);document.getElementById(`duration-txt-${t}`).textContent=` - ${e} Hours`;try{const t=await fetch(o,{method:"PATCH",headers:{"Content-type":"application-json"}}),{data:{totalPrice:e}}=await t.json();a.textContent=`Rp.${e}`,splitPrice(a),updateTotalPrice()}catch(t){console.log(t)}}function updateTotalPrice(){let t=0;selectedCart.map((e=>{const[n,...o]=document.getElementById(`waifu-price-${e}`).textContent.toString().split("."),a=parseInt(o.join(""));t+=a}));const e=document.getElementsByClassName("order-count")[0],n=document.getElementsByClassName("total-price")[0];n.textContent=`Rp.${t}`,e.textContent=`${selectedCart.length} Order`,splitPrice(n)}window.addEventListener("load",(function(){splitPrices("sub-price")})),[...addBtn].forEach((t=>{t.addEventListener("click",(function(){const t=this.dataset.id,e=document.getElementById(`duration-${t}`),n=parseInt(e.textContent);if(n+1>5)return;updateSubPrice(t,e.textContent=n+1)}))})),[...minBtn].forEach((t=>{t.addEventListener("click",(function(){const t=this.dataset.id,e=document.getElementById(`duration-${t}`),n=parseInt(e.textContent);if(n-1<1)return;updateSubPrice(t,e.textContent=n-1)}))})),payOrder.addEventListener("click",(async function(){const t=document.getElementsByClassName("order-count")[0].textContent.toString().split(" ")[0];if(parseInt(t)<=0)return;const e=selectedCart.map((t=>({cartId:t,duration:document.getElementById(`duration-${t}`).value})));try{const t=`${BASE_URL_API}/order`,n=await fetch(t,{method:"POST",headers:{"Content-type":"application/json"},body:JSON.stringify({orders:e})});await n.json()}catch(t){console.log(t)}}));const allBtnDate=document.querySelectorAll(".btn-toggle-date-picker");[...allBtnDate].forEach((t=>{const e=t.getAttribute("data-cart-id");t.addEventListener("click",(async function(){const t={key:"data-modal-id",value:e};let n;try{const t=`${BASE_URL_API}/cart/date-time/${e}`,o=await fetch(t,{method:"GET",headers:{"Content-type":"application/json"}}),{data:a}=await o.json();console.log(a),n=a}catch(t){console.log(t),n=null}activeModal(t);const o=document.querySelector(`#card-${e}`),a=document.querySelector(`#modal-popup[data-modal-id="${e}"]`),c=a.querySelector(".year "),r=a.querySelector(".hour"),i=a.querySelector(".year .year-list"),d=new DatePicker(n);c.addEventListener("click",(function(){i.classList.toggle("active")}));[...r.querySelectorAll(".hour-part .part-item")].forEach((t=>{t.addEventListener("click",(t=>d.setIndexHourPart(t.srcElement)))}));a.querySelector(".date-submit button").addEventListener("click",(async()=>{const t={time:d.getUnixTime()};try{const n=`${BASE_URL_API}/cart/date-time/${e}`,a=await fetch(n,{method:"POST",headers:{"Content-type":"application/json"},body:JSON.stringify(t)}),c=await a.json(),{type:r}=c;if("success"!==r)throw new Error("something went wrong")}catch(t){console.log(t)}finally{const t=o.querySelector(".start-date");o.querySelector(".hour-text").textContent=d.getTimeStr(),t.textContent=d.getFullDateStr(),disactiveModal()}}))}))}));
//# sourceMappingURL=cart.main.js.map